---
- name: Cleanup
  hosts: all
  vars:
    cloud_name: "{{ cloud }}"  # inherited from the parent job
  environment:
    PATH: "{{ ansible_user_dir }}/.local/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Delete server groups
      when: scs_compliance.enabled
      block:
      - name: List existing server groups
        ansible.builtin.command: "openstack server group list -f value -c Name -c ID"
        register: server_groups
        environment:
          OS_CLOUD: "{{ cloud_name }}"
        changed_when: true
      - name: Parse test-cluster-controller srvgrp and assign ID to srvgrp_controller
        ansible.builtin.set_fact:
          srvgrp_controller: "{{ item.split(' ')[0] }}"
        loop: "{{ server_groups.stdout_lines }}"
        when: "server_groups is defined and server_groups.stdout_lines | length > 0 and 'test-cluster-controller' in item.split(' ')"
      - name: Parse test-cluster-worker srvgrp and assign ID to srvgrp_worker
        ansible.builtin.set_fact:
          srvgrp_worker: "{{ item.split(' ')[0] }}"
        loop: "{{ server_groups.stdout_lines }}"
        when: "server_groups is defined and server_groups.stdout_lines | length > 0 and 'test-cluster-worker' in item.split(' ')"
      - name: Delete Server Group for worker nodes
        ansible.builtin.command: "openstack server group delete {{ srvgrp_worker }}"
        environment:
          OS_CLOUD: "{{ cloud_name }}"
        when: srvgrp_worker is defined
        changed_when: true
      - name: Delete Server Group for control-plane nodes
        ansible.builtin.command: "openstack server group delete {{ srvgrp_controller }}"
        environment:
          OS_CLOUD: "{{ cloud_name }}"
        when: srvgrp_controller is defined
        changed_when: true
    - name: Check if test-cluster exists
      ansible.builtin.command: "kubectl get cluster test-cluster"
      register: cluster_check
      ignore_errors: true
      changed_when: true
    - name: Cleanup workload cluster
      ansible.builtin.command: "kubectl delete -f {{ ansible_user_dir }}/cluster.yaml"
      when: cluster_check.rc == 0
      changed_when: true
