apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Version }}-md-0
spec:
  template:
    spec:
      files:
        {{- range $.Values.containerd_registry_files.hosts }}
        - content: |
{{ $.Files.Get . | indent 12 }}
          owner: root:root
          path: /etc/containerd/certs.d/{{ base . }}/hosts.toml
          permissions: "0644"
        {{- end }}
        {{- range $.Values.containerd_registry_files.certs }}
        - content: |
{{ $.Files.Get . | indent 12 }}
          owner: root:root
          path: /etc/containerd/certs/{{ base . }}
          permissions: "0644"
        {{- end }}
{{- if .Values.http_proxy }}
        - content: |
            PROXY={{ .Values.http_proxy }}
            if [[ ! -z "$PROXY" ]]; then
              export HTTP_PROXY=$PROXY
              export HTTPS_PROXY=$PROXY
              export http_proxy=$PROXY
              export https_proxy=$PROXY
              export NO_PROXY=".svc,.svc.cluster,.svc.cluster.local,127.0.0.0/8,169.254.169.254/32,fd00:ec2::254/128,{{ .Values.node_cidr }},192.168.0.0/16,10.96.0.0/12,{{ .Values.no_proxy }}"
              export no_proxy=".svc,.svc.cluster,.svc.cluster.local,127.0.0.0/8,169.254.169.254/32,fd00:ec2::254/128,{{ .Values.node_cidr }},192.168.0.0/16,10.96.0.0/12,{{ .Values.no_proxy }}"
            fi
          owner: root:root
          path: /etc/profile.d/proxy.sh
          permissions: "0644"
        - content: |
            [Service]
            Environment="HTTP_PROXY={{ .Values.http_proxy }}"
            Environment="HTTPS_PROXY={{ .Values.http_proxy }}"
            Environment="NO_PROXY={{ .Values.no_proxy }}"
          path: "/etc/systemd/system/containerd.service.d/http-proxy.conf"
          owner: "root:root"
          permissions: "0644"
{{- end }}
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{"{{"}} instance_id {{"}}"}}'
          name: '{{"{{"}} local_hostname {{"}}"}}'
      preKubeadmCommands:
{{- $proxyCmd := "" }}
{{- if .Values.http_proxy }}
{{- $proxyCmd = ". /etc/profile.d/proxy.sh; " }}
{{- end }}
        - {{ $proxyCmd }}DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl
        - {{ $proxyCmd }}curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
        - {{ $proxyCmd }}apt-get update -y
        - TRIMMED_KUBERNETES_VERSION=$(echo v1.28.7 | sed 's/\./\./g' | sed 's/^v//')
        - RESOLVED_KUBERNETES_VERSION=$(apt-cache policy kubelet | sed 's/\*\*\*//' | awk -v VERSION=${TRIMMED_KUBERNETES_VERSION} '$1~ VERSION { print $1 }' | head -n1)
        - {{ $proxyCmd }}apt-get install -y ca-certificates socat jq ebtables apt-transport-https cloud-utils prips containerd kubelet=${RESOLVED_KUBERNETES_VERSION} kubeadm=${RESOLVED_KUBERNETES_VERSION} kubectl=${RESOLVED_KUBERNETES_VERSION}
        - |
          cat <<EOT >> /etc/containerd/config.toml
            [plugins."io.containerd.grpc.v1.cri".registry]
              config_path = "/etc/containerd/certs.d"
          EOT
        - systemctl daemon-reload
        - systemctl restart containerd.service
