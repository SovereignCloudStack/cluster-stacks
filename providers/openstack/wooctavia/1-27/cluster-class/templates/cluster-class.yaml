apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Version }}
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: {{ .Release.Name }}-{{ .Chart.Version }}-control-plane
    machineInfrastructure:
      ref:
        kind: OpenStackMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
        name: {{ .Release.Name }}-{{ .Chart.Version }}-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
      kind: OpenStackClusterTemplate
      name: {{ .Release.Name }}-{{ .Chart.Version }}-cluster
  workers:
    machineDeployments:
    - class: {{ .Release.Name }}-{{ .Chart.Version }}
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: {{ .Release.Name }}-{{ .Chart.Version }}
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            name: {{ .Release.Name }}-{{ .Chart.Version }}
  variables:
   - name: external_id
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: "ebfe5546-f09f-4f42-ab54-094e457d42ec"
         example: "ebfe5546-f09f-4f42-ab54-094e457d42ec"
         format: "uuid4"
         description: "ExternalNetworkID is the ID of an external OpenStack Network. This is necessary to get public internet to the VMs."
   - name: controller_flavor
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: "SCS-2V-4-20"
         example: "SCS-2V-4-20"
         description: "OpenStack instance flavor for control-plane nodes."
   - name: worker_flavor
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: "SCS-2V-4-20"
         example: "SCS-2V-4-20"
         description: "OpenStack instance flavor for worker nodes."
   - name: controller_root_disk
     required: false
     schema:
       openAPIV3Schema:
         type: integer
         minimum: 1
         example: 20
         description: "Root disk size in GiB for control-plane nodes. OpenStack volume will be created and used instead of an ephemeral disk defined in flavor. Should be used also for the diskless flavors."
   - name: worker_root_disk
     required: false
     schema:
       openAPIV3Schema:
         type: integer
         minimum: 1
         example: 20
         description: "Root disk size in GiB for worker nodes. OpenStack volume will be created and used instead of an ephemeral disk defined in flavor. Should be used also for the diskless flavors."
   - name: yawol_flavor_id
     required: true
     schema:
       openAPIV3Schema:
         type: string
         format: "uuid4"
         example: "0a79590e-10d7-4c2c-8f69-ca0a2c6208d2"
         description: "ID of the existing flavor used as a default yawol flavor."
   - name: yawol_image_id
     required: true
     schema:
       openAPIV3Schema:
         type: string
         format: "uuid4"
         example: "f0b2ef46-f0ff-43d2-9c08-f58a5a6e9060"
         description: "ID of the existing imaged used as a default yawol image."
   - name: network_id
     required: true
     schema:
       openAPIV3Schema:
         type: string
         format: "uuid4"
         example: "40a51f6c-9e4b-4b24-9187-49851a410c97"
         description: "ID of the existing network. The network should have one subnet with one port reserved as virtual IP."
   - name: apiserver_virtual_ip
     required: true
     schema:
       openAPIV3Schema:
         type: string
         format: "ipv4"
         example: "10.0.0.197"
         description: "Virtual IP address reserved in network_id."
   - name: apiserver_public_ip
     required: false
     schema:
       openAPIV3Schema:
         type: string
         format: "ipv4"
         description: "Public IP address associated with apiserver_virtual_ip. It is needed only when the management cluster is on a different network as a workload cluster."
   - name: openstack_security_groups
     required: false
     schema:
       openAPIV3Schema:
         type: array
         default: []
         example: ["security-group-1"]
         description: "The names of the security groups to assign to the instance"
         items:
           type: string
   - name: cloud_name
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: "openstack"
         example: "openstack"
         description: "The name of the cloud to use from the clouds secret"
   - name: secret_name
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: "openstack"
         example: "openstack"
         description: "The name of the clouds secret"
   - name: controller_server_group_id
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: ""
         example: "3adf4e92-bb33-4e44-8ad3-afda9dfe8ec3"
         description: "The server group to assign the control plane nodes to."
   - name: worker_server_group_id
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: ""
         example: "869fe071-1e56-46a9-9166-47c9f228e297"
         description: "The server group to assign the worker nodes to."
   - name: ssh_key
     required: false
     schema:
       openAPIV3Schema:
         type: string
         default: ""
         example: "capi-keypair"
         description: "The ssh key to inject in the nodes."
  patches:
    - name: controller_flavor
      description: "Sets the openstack instance flavor for the KubeadmControlPlane."
      enabledIf: {{ `'{{ ne .controller_flavor "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/flavor"
            valueFrom:
              variable: controller_flavor
    - name: worker_flavor
      description: "Sets the openstack instance flavor for the worker nodes."
      enabledIf: {{ `'{{ ne .worker_flavor "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: false
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/flavor"
            valueFrom:
              variable: worker_flavor
    - name: controller_root_disk
      description: "Sets the root disk size in GiB for control-plane nodes."
      enabledIf: {{ `"{{ if .controller_root_disk }}true{{end}}"` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
          - op: add
            path: "/spec/template/spec/rootVolume"
            valueFrom:
              template: |
                diskSize: {{"{{"}} .controller_root_disk {{"}}"}}
    - name: worker_root_disk
      description: "Sets the root disk size in GiB for worker nodes."
      enabledIf: {{ `"{{ if .worker_root_disk }}true{{end}}"` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: false
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: add
            path: "/spec/template/spec/rootVolume"
            valueFrom:
              template: |
                diskSize: {{"{{"}} .worker_root_disk {{"}}"}}
    - name: external_id
      description: "Sets the ID of an external OpenStack Network. This is necessary to get public internet to the VMs."
      enabledIf: {{ `'{{ ne .external_id "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/externalNetworkId"
            valueFrom:
              variable: external_id
    - name: kube_vip
      description: "Prepares kube-vip."
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
          - op: add
            path: "/spec/template/spec/network"
            valueFrom:
              template: |
                id: {{"{{"}} .network_id {{"}}"}}
          - op: add
            path: "/spec/template/spec/apiServerFixedIP"
            valueFrom:
              template: {{ `"{{ if .apiserver_public_ip }}{{.apiserver_public_ip}}{{else}}{{.apiserver_virtual_ip}}{{end}}"` }}
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
          - op: add
            path: "/spec/template/spec/ports"
            valueFrom:
              template: |
                - network:
                    id: {{"{{"}} .network_id {{"}}"}}
                  allowedAddressPairs:
                  - ipAddress: {{"{{"}} .apiserver_virtual_ip {{"}}"}}
        - selector:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlaneTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
          - op: add
            path: "/spec/template/spec/kubeadmConfigSpec/files/-"
            valueFrom:
              template: |
                content: |
                  # docker run --network host --rm ghcr.io/kube-vip/kube-vip:v0.7.2 manifest pod --address '{{"{{"}} .apiserver_virtual_ip {{"}}"}}' --controlplane --arp --leaderElection --enableLoadBalancer
                  apiVersion: v1
                  kind: Pod
                  metadata:
                    creationTimestamp: null
                    name: kube-vip
                    namespace: kube-system
                  spec:
                    containers:
                    - args:
                      - manager
                      env:
                      - name: vip_arp
                        value: "true"
                      - name: port
                        value: "6443"
                      - name: vip_cidr
                        value: "32"
                      - name: dns_mode
                        value: first
                      - name: cp_enable
                        value: "true"
                      - name: cp_namespace
                        value: kube-system
                      - name: vip_leaderelection
                        value: "true"
                      - name: vip_leasename
                        value: plndr-cp-lock
                      - name: vip_leaseduration
                        value: "5"
                      - name: vip_renewdeadline
                        value: "3"
                      - name: vip_retryperiod
                        value: "1"
                      - name: lb_enable
                        value: "true"
                      - name: lb_port
                        value: "6443"
                      - name: lb_fwdmethod
                        value: local
                      - name: address
                        value: '{{"{{"}} .apiserver_virtual_ip {{"}}"}}'
                      - name: prometheus_server
                        value: :2112
                      image: ghcr.io/kube-vip/kube-vip:v0.7.2
                      imagePullPolicy: IfNotPresent # Always
                      name: kube-vip
                      resources: {}
                      securityContext:
                        capabilities:
                          add:
                          - NET_ADMIN
                          - NET_RAW
                      volumeMounts:
                      - mountPath: /etc/kubernetes/admin.conf
                        name: kubeconfig
                    hostAliases:
                    - hostnames:
                      - kubernetes
                      ip: 127.0.0.1
                    hostNetwork: true
                    volumes:
                    - hostPath:
                        path: /etc/kubernetes/admin.conf
                      name: kubeconfig
                  status: {}
                owner: "root:root"
                path: /etc/kubernetes/manifests/kube-vip.yaml
                permissions: "0644"
    - name: openstack_security_groups
      description: "Sets the list of the openstack security groups for the worker and the controlplane instances."
      enabledIf: {{ `"{{ if .openstack_security_groups }}true{{end}}"` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: add
            path: "/spec/template/spec/securityGroups"
            valueFrom:
              template: {{ `"[ {{ range .openstack_security_groups }} { name: {{ . }}}, {{ end }} ]"` }}
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/allowAllInClusterTraffic"
            value: false
    - name: cloud_name
      description: "Sets the name of the cloud to use from the clouds secret."
      enabledIf: {{ `'{{ ne .cloud_name "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/cloudName"
            valueFrom:
              variable: cloud_name
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/cloudName"
            valueFrom:
              variable: cloud_name
    - name: secret_name
      description: "Sets the name of the clouds secret."
      enabledIf: {{ `'{{ ne .secret_name "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackClusterTemplate
            matchResources:
              infrastructureCluster: true
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/identityRef/name"
            valueFrom:
              variable: secret_name
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: replace
            path: "/spec/template/spec/identityRef/name"
            valueFrom:
              variable: secret_name
    - name: controller_server_group_id
      description: "Sets the server group to assign the control plane nodes to."
      enabledIf: {{ `'{{ ne .controller_server_group_id "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
          jsonPatches:
          - op: add
            path: "/spec/template/spec/serverGroupID"
            valueFrom:
              variable: controller_server_group_id
    - name: worker_server_group_id
      description: "Sets the server group to assign the worker nodes to."
      enabledIf: {{ `'{{ ne .worker_server_group_id "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: false
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: add
            path: "/spec/template/spec/serverGroupID"
            valueFrom:
              variable: worker_server_group_id
    - name: ssh_key
      description: "Sets the ssh key to inject in the nodes."
      enabledIf: {{ `'{{ ne .ssh_key "" }}'` }}
      definitions:
        - selector:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
            kind: OpenStackMachineTemplate
            matchResources:
              controlPlane: true
              machineDeploymentClass:
                names:
                  - {{ .Release.Name }}-{{ .Chart.Version }}
          jsonPatches:
          - op: add
            path: "/spec/template/spec/sshKeyName"
            valueFrom:
              variable: ssh_key
